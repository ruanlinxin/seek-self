name: 发布构建

on:
  push:
    branches: [ main, prd ]
  pull_request:
    branches: [ main, prd ]
  release:
    types: [ published ]

jobs:
  release-build:
    runs-on: ubuntu-latest

    steps:
      - name: 检出代码
        uses: actions/checkout@v4

      - name: 设置 Node.js 环境
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'
          cache-dependency-path: 'panel/yarn.lock'

      - name: 安装依赖
        run: |
          cd panel
          yarn install --frozen-lockfile

      - name: 构建前端项目
        run: |
          cd panel
          yarn build

      - name: 创建发布包
        run: |
          # 创建发布目录
          mkdir -p release-${{ github.event.release.tag_name }}
          
          # 复制前端构建结果
          cp -r panel/dist release-${{ github.event.release.tag_name }}/
          
          # 复制前端 Dockerfile 和 nginx.conf
          cp panel/Dockerfile release-${{ github.event.release.tag_name }}/
          cp panel/nginx.conf release-${{ github.event.release.tag_name }}/
          
          # 创建版本信息文件
          cat > release-${{ github.event.release.tag_name }}/VERSION << EOF
          版本: ${{ github.event.release.tag_name }}
          发布时间: ${{ github.event.release.published_at }}
          发布说明: ${{ github.event.release.body }}
          构建时间: $(date)
          提交哈希: ${{ github.sha }}
          EOF
          
          # 创建部署脚本
          cat > release-${{ github.event.release.tag_name }}/deploy.sh << 'EOF'
          #!/bin/bash
          
          echo "开始部署 seek-self-panel..."
          
          # 检查 Docker 是否可用
          if command -v docker &> /dev/null; then
              echo "使用 Docker 部署..."
              docker build -t seek-self-panel:$1 .
              docker run -d -p 3000:3000 --name seek-self-panel-$1 seek-self-panel:$1
              echo "Docker 部署完成，访问地址: http://localhost:3000"
          else
              echo "Docker 不可用，请手动部署 dist 目录到 Web 服务器"
          fi
          EOF
          
          chmod +x release-${{ github.event.release.tag_name }}/deploy.sh

      - name: 压缩发布包
        run: |
          tar -czf seek-self-panel-${{ github.event.release.tag_name }}.tar.gz release-${{ github.event.release.tag_name }}/
          zip -r seek-self-panel-${{ github.event.release.tag_name }}.zip release-${{ github.event.release.tag_name }}/

      - name: 上传发布包到 Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./seek-self-panel-${{ github.event.release.tag_name }}.tar.gz
          asset_name: seek-self-panel-${{ github.event.release.tag_name }}.tar.gz
          asset_content_type: application/gzip

      - name: 上传 ZIP 包到 Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./seek-self-panel-${{ github.event.release.tag_name }}.zip
          asset_name: seek-self-panel-${{ github.event.release.tag_name }}.zip
          asset_content_type: application/zip

      - name: 输出发布信息
        run: |
          echo "发布完成！"
          echo "版本: ${{ github.event.release.tag_name }}"
          echo "发布说明: ${{ github.event.release.body }}"
          echo "发布时间: ${{ github.event.release.published_at }}"
          echo "构建时间: $(date)"
